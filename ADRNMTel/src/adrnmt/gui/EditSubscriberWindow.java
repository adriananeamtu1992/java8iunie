/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package adrnmt.gui;

import javax.swing.JOptionPane;
import adrnmt.datatypes.Abonat;
import static adrnmt.datatypes.Abonat.fromString;
import adrnmt.datatypes.CarteDeTelefon;
import adrnmt.datatypes.InvalidDataTypeError;
import adrnmt.datatypes.ValidatorNumar;
import adrnmt.logger.Loggers;
import adrnmt.settings.Settings;
import java.time.Duration;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import javax.swing.JCheckBox;

/**
 *
 * @author Adriana
 */
public class EditSubscriberWindow extends javax.swing.JDialog {

    private CustomGuiEvent customGuiEvent;
    private EditSubscriberEvent editSubscriberEvent;
    private SearchSubscriberEvent searchSubscriberEvent;
    Settings settings;
    public static final int ADD_MODE = 1;
    public static final int EDIT_MODE = 2;
    public static final int SEARCH_MODE = 3;
    private int lastEditedIndex = 0;
    private int status = 0;
    /**
     * Creates new form EditSubscriberWindow
     * @param parent
     * @param modal
     */
    public EditSubscriberWindow(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        settings = Settings.getInstance();
        initComponents();
    }
    
    
    public void addEventListener(CustomGuiEvent customGuiEvent){
        this.customGuiEvent = customGuiEvent;
    }
    
    
    public void addEditEventListener(EditSubscriberEvent editSubscriberEvent){
        this.editSubscriberEvent = editSubscriberEvent;
    }
    
    
    public void addSearchEventListener(SearchSubscriberEvent searchSubscriberEvent){
        this.searchSubscriberEvent = searchSubscriberEvent;
    }
    
    
    private void showThis(){
        this.setVisible(true);
        zaCheck.setSelected(false);
        fillValidators(zaCheck);
    }
    
    public void addSubscriber(){
        this.status = ADD_MODE;
        jbtnAccept.setText(Settings.getInstance().getBundle("gui.add"));
        nameField.setText("");
        cnpField.setText("");
        nrTel.setText("");
        dataNasteriiField.setText("");
        showThis();
    }
    
    
    public void searchSubscriber(){
        this.status = SEARCH_MODE;
        jbtnAccept.setText(Settings.getInstance().getBundle("gui.search"));
        showThis();
    }
    
    
    public void editSubscriber(CarteDeTelefon carteDeTelefon, int index){
        this.lastEditedIndex = index;
        Abonat a = carteDeTelefon.get(index);
        if(a != null){
            editSubscriber(a);  
        }
        else {
           JOptionPane.showMessageDialog (this, 
                   Settings.getInstance().getBundle("gui.selectRow"),
                   Settings.getInstance().getBundle("gui.warning"), JOptionPane.WARNING_MESSAGE);
           Loggers.getDefaultLogger().message( Settings.getInstance().getBundle("gui.selectRow") );
        }
    }
    
    public void editSubscriber(Abonat abonat){
        this.status = EDIT_MODE;
        jbtnAccept.setText(Settings.getInstance().getBundle("gui.modify"));
        this.nameField.setText(abonat.getNume());
        this.cnpField.setText(String.valueOf(abonat.getPrenume()));
        this.nrTel.setText(abonat.getUnNumarTel());
        this.dataNasteriiField.setText(Abonat.dateToString(abonat.getDataNasterii()));
        showThis();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jbtnAccept = new javax.swing.JButton();
        jbtnCancel = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        dataNasteriiField = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        nrTel = new javax.swing.JTextField();
        zaCheck = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cnpField = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(229, 255, 255));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(242, 229, 255));
        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        jbtnAccept.setText(settings.getBundle("gui.ok")
        );
        jbtnAccept.setToolTipText("");
        jbtnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAcceptActionPerformed(evt);
            }
        });
        jPanel1.add(jbtnAccept);

        jbtnCancel.setText(settings.getBundle("gui.cancel")
        );
        jbtnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCancelActionPerformed(evt);
            }
        });
        jPanel1.add(jbtnCancel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 2, 4);
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel3.setBackground(new java.awt.Color(229, 255, 229));
        jPanel3.setLayout(new java.awt.GridLayout(1, 0));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setLabelFor(dataNasteriiField);
        jLabel4.setText(settings.getBundle("gui.data.nasterii")
        );
        jPanel3.add(jLabel4);

        dataNasteriiField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataNasteriiFieldActionPerformed(evt);
            }
        });
        jPanel3.add(dataNasteriiField);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 2, 4);
        getContentPane().add(jPanel3, gridBagConstraints);

        jPanel4.setBackground(new java.awt.Color(255, 229, 229));
        jPanel4.setLayout(new java.awt.GridLayout(1, 0));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setLabelFor(nrTel);
        jLabel3.setText(settings.getBundle("gui.nrTel")
        );
        jPanel4.add(jLabel3);
        jPanel4.add(nrTel);

        zaCheck.setText(settings.getBundle("gui.nrmobil")
        );
        zaCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zaCheckActionPerformed(evt);
            }
        });
        jPanel4.add(zaCheck);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 2, 4);
        getContentPane().add(jPanel4, gridBagConstraints);

        jPanel5.setBackground(new java.awt.Color(253, 230, 253));
        jPanel5.setLayout(new java.awt.GridLayout(1, 0));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setLabelFor(cnpField);
        jLabel2.setText(settings.getBundle("gui.cnp"));
        jPanel5.add(jLabel2);
        jPanel5.add(cnpField);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 2, 4);
        getContentPane().add(jPanel5, gridBagConstraints);

        jPanel6.setBackground(new java.awt.Color(229, 229, 255));
        jPanel6.setLayout(new java.awt.GridLayout(1, 0));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setLabelFor(nameField);
        jLabel1.setText(settings.getBundle("gui.nume")
        );
        jPanel6.add(jLabel1);

        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });
        jPanel6.add(nameField);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 2, 4);
        getContentPane().add(jPanel6, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCancelActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jbtnCancelActionPerformed

    
    private boolean numeleEValid(){
        String nume = nameField.getText();
        if(nume.length() < 2 || !nume.matches ("[a-zA-Z]*")){
            JOptionPane.showMessageDialog(this, "nume invalid");
            Loggers.getDefaultLogger().message(new RuntimeException("nume invalid"));
            return false;
        }
        return true;
    }
    
    private boolean dataNasteriiEValida(){
        try {
            Date inputDate = fromString(dataNasteriiField.getText());
            LocalDate lDate = inputDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            Duration duration = Duration.between(LocalDate.now().atStartOfDay(), lDate.atStartOfDay());
            if (duration.toDays() >= 0){
                JOptionPane.showMessageDialog(this, "data invalida, prea recenta");
                Loggers.getDefaultLogger().message(new RuntimeException("data prea recenta"));
                return false;
            };
            
            return true;
        } catch (InvalidDataTypeError ex) {
            JOptionPane.showMessageDialog(this, "formatul datei este invalid");
            Loggers.getDefaultLogger().message(new RuntimeException("formatul datei este invalid"));
            return false;
        }
    }
    
    private void jbtnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAcceptActionPerformed
        Abonat abonat = null;

        
        
        switch (status) {
            case ADD_MODE:
                zaCheck.setVisible(true);
                fillValidators(zaCheck);
                if(validatorNumar == null){
                    throw new RuntimeException("cum de am eu validator null?");
                }
                String nrTelText = nrTel.getText();
                if (!validatorNumar.valideaza(nrTelText)) {
                    JOptionPane.showMessageDialog(this, "nr telefon invalid");
                    Loggers.getDefaultLogger().message(new RuntimeException("nr telefon invalid"));
                    return;
                }

                if(!numeleEValid()){
                    return;
                }
                
                if(!dataNasteriiEValida()){
                    return;
                }
                

        
                try {
                    abonat = Abonat.create(nameField.getText(),
                            cnpField.getText(), nrTelText,
                            dataNasteriiField.getText(),
                            eNrMobil);
                    if (abonat.eNascutAzi()) {
                        JOptionPane.showMessageDialog(this, settings.getBundle("nascut.azi.msg"));
                    }
                } catch(InvalidDataTypeError ex){
                    Loggers.getDefaultLogger().message(ex);
                }   if(abonat != null && customGuiEvent != null) {
                    customGuiEvent.actionPerformed(abonat);
                }   break;
            case EDIT_MODE:
                zaCheck.setVisible(false);
                if(!numeleEValid()){
                    return;
                }
                
                if(!dataNasteriiEValida()){
                    return;
                }
                                
                try {
                    abonat = Abonat.create(nameField.getText(),
                            cnpField.getText(), nrTel.getText(),
                            dataNasteriiField.getText());
                } catch(InvalidDataTypeError ex){
                    Loggers.getDefaultLogger().message(ex);
                }   if(editSubscriberEvent != null){
                    editSubscriberEvent.subscriberEdited(abonat, lastEditedIndex);
                }  
                break;
            case SEARCH_MODE:
                zaCheck.setVisible(false);
                if(searchSubscriberEvent != null){
                    searchSubscriberEvent.subscriberSearched(
                            nameField.getText(),
                            cnpField.getText(),
                            nrTel.getText(),
                            dataNasteriiField.getText()
                    );
                }   break;
            default:
                System.out.println("ce-ai facut bobitza???");
                break;
        }
        
        
        this.setVisible(false);
    }//GEN-LAST:event_jbtnAcceptActionPerformed


    
//    ValidatorNumar validatorNumar;
    
    private void zaCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zaCheckActionPerformed
        JCheckBox checkBox = (JCheckBox) evt.getSource();
        fillValidators(checkBox);
    }//GEN-LAST:event_zaCheckActionPerformed

    boolean eNrMobil = false;
    ValidatorNumar validatorNumar;
    private void fillValidators(JCheckBox checkBox){
        eNrMobil = checkBox.isSelected();
        if (eNrMobil) {
            //e numar mobil
            validatorNumar = ValidatorNumar.MOBIL;
        } else {
            //e numar fix
            validatorNumar = ValidatorNumar.FIX;
        }
    }
    
    private void dataNasteriiFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataNasteriiFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dataNasteriiFieldActionPerformed

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cnpField;
    private javax.swing.JTextField dataNasteriiField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JButton jbtnAccept;
    private javax.swing.JButton jbtnCancel;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField nrTel;
    private javax.swing.JCheckBox zaCheck;
    // End of variables declaration//GEN-END:variables
}
